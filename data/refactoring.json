{
  "courseId": "REFACTORING-101",
  "guideId": "CSExplore-Team",
  "title": "Refactoring Mastery: Write Clean & Efficient Code",
  "modules": [
    {
      "moduleId": "REFACTORING-1",
      "title": "Introduction to Refactoring",
      "description": "Understand what refactoring is, why it is essential, and common code smells.",
      "author": "CSExplore Team"
    },
    {
      "moduleId": "REFACTORING-2",
      "title": "Code Smells & Identifying Bad Code",
      "description": "Learn about common code smells like duplicated code, long functions, and large classes.",
      "author": "CSExplore Team"
    },
    {
      "moduleId": "REFACTORING-3",
      "title": "Refactoring Fundamentals & Best Practices",
      "description": "Discover key refactoring principles such as the Boy Scout Rule and Single Responsibility Principle (SRP).",
      "author": "CSExplore Team"
    },
    {
      "moduleId": "REFACTORING-4",
      "title": "Extract Method & Extract Variable",
      "description": "Improve readability by extracting reusable methods and variables.",
      "author": "CSExplore Team"
    },
    {
      "moduleId": "REFACTORING-5",
      "title": "Removing Duplication & DRY Principle",
      "description": "Eliminate redundant code and apply the 'Don't Repeat Yourself' (DRY) principle.",
      "author": "CSExplore Team"
    },
    {
      "moduleId": "REFACTORING-6",
      "title": "Simplifying Conditionals & Loops",
      "description": "Refactor nested conditionals, replace loops with higher-order functions, and improve readability.",
      "author": "CSExplore Team"
    },
    {
      "moduleId": "REFACTORING-7",
      "title": "Improving Function & Class Design",
      "description": "Refactor long functions, reduce parameter lists, and use meaningful function names.",
      "author": "CSExplore Team"
    },
    {
      "moduleId": "REFACTORING-8",
      "title": "Refactoring Object-Oriented Code",
      "description": "Apply design patterns like Factory, Strategy, and Singleton for better code structure.",
      "author": "CSExplore Team"
    },
    {
      "moduleId": "REFACTORING-9",
      "title": "Refactoring for Performance Optimization",
      "description": "Optimize database queries, improve algorithm efficiency, and remove memory leaks.",
      "author": "CSExplore Team"
    },
    {
      "moduleId": "REFACTORING-10",
      "title": "Unit Testing & Regression Testing",
      "description": "Ensure safe refactoring with unit tests and avoid breaking existing functionality.",
      "author": "CSExplore Team"
    },
    {
      "moduleId": "REFACTORING-11",
      "title": "Refactoring Legacy Code",
      "description": "Learn techniques to gradually improve old codebases without rewriting from scratch.",
      "author": "CSExplore Team"
    },
    {
      "moduleId": "REFACTORING-12",
      "title": "Final Capstone: Large-Scale Code Refactoring Project",
      "description": "Work on a real-world project to refactor a poorly structured codebase.",
      "author": "CSExplore Team"
    },
    {
      "moduleId": "REFACTORING-13",
      "title": "Top 50 Refactoring Interview Questions",
      "description": "Prepare for software engineering interviews with common refactoring challenges.",
      "author": "CSExplore Team"
    }
  ]
}
