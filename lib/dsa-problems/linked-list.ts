import { DSASheetProblemType } from "../../utils/dsa-sheet-type";

export const LINKED_LIST: DSASheetProblemType[] = [
  {
    id: "linked-list-1",
    name: "Reverse a Linked List",
    description: "Reverse a singly linked list.",
    link: "https://leetcode.com/problems/reverse-linked-list/",
    guideLink: "",
    difficultyLevel: "Easy",
  },
  {
    id: "linked-list-2",
    name: "Merge Two Sorted Lists",
    description:
      "Merge two sorted linked lists and return it as a new sorted list.",
    link: "https://leetcode.com/problems/merge-two-sorted-lists/",
    guideLink: "",
    difficultyLevel: "Easy",
  },
  {
    id: "linked-list-3",
    name: "Reorder List",
    description: "Reorder a linked list in a specific manner.",
    link: "https://leetcode.com/problems/reorder-list/",
    guideLink: "",
    difficultyLevel: "Medium",
  },
  {
    id: "linked-list-4",
    name: "Remove Nth Node From End of List",
    description: "Remove the nth node from the end of a linked list.",
    link: "https://leetcode.com/problems/remove-nth-node-from-end-of-list/",
    guideLink: "",
    difficultyLevel: "Medium",
  },
  {
    id: "linked-list-5",
    name: "Add Two Numbers",
    description: "Add two numbers represented by linked lists.",
    link: "https://leetcode.com/problems/add-two-numbers/",
    guideLink: "",
    difficultyLevel: "Medium",
  },
  {
    id: "linked-list-6",
    name: "LRU Cache",
    description:
      "Design and implement a data structure for Least Recently Used (LRU) cache.",
    link: "https://leetcode.com/problems/lru-cache/",
    guideLink: "",
    difficultyLevel: "Hard",
  },
  {
    id: "linked-list-7",
    name: "Merge K Sorted Lists",
    description:
      "Merge k sorted linked lists and return it as one sorted list.",
    link: "https://leetcode.com/problems/merge-k-sorted-lists/",
    guideLink: "",
    difficultyLevel: "Hard",
  },
  {
    id: "linked-list-8",
    name: "Copy List with Random Pointer",
    description: "Copy a linked list with random pointer.",
    link: "https://leetcode.com/problems/copy-list-with-random-pointer/",
    guideLink: "",
    difficultyLevel: "Medium",
  },
  {
    id: "linked-list-9",
    name: "Detect Cycle in Linked List",
    description: "Detect if a cycle exists in a linked list.",
    link: "https://leetcode.com/problems/linked-list-cycle/",
    guideLink: "",
    difficultyLevel: "Easy",
  },
  {
    id: "linked-list-10",
    name: "Intersection of Two Linked Lists",
    description: "Find the intersection node of two singly linked lists.",
    link: "https://leetcode.com/problems/intersection-of-two-linked-lists/",
    guideLink: "",
    difficultyLevel: "Easy",
  },
  {
    id: "linked-list-11",
    name: "Flatten a Multilevel Doubly Linked List",
    description: "Flatten a multilevel doubly linked list.",
    link: "https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list/",
    guideLink: "",
    difficultyLevel: "Medium",
  },
  {
    id: "linked-list-12",
    name: "Odd Even Linked List",
    description: "Group all odd nodes together followed by the even nodes.",
    link: "https://leetcode.com/problems/odd-even-linked-list/",
    guideLink: "",
    difficultyLevel: "Medium",
  },
  {
    id: "linked-list-13",
    name: "Reverse Nodes in k-Group",
    description: "Reverse nodes in k-group.",
    link: "https://leetcode.com/problems/reverse-nodes-in-k-group/",
    guideLink: "",
    difficultyLevel: "Hard",
  },
  {
    id: "linked-list-14",
    name: "Reverse a Linked List",
    description: "Reverse a singly linked list.",
    link: "https://leetcode.com/problems/reverse-linked-list/",
    guideLink: "",
    difficultyLevel: "Easy",
  },
  {
    id: "linked-list-15",
    name: "Merge Two Sorted Lists",
    description:
      "Merge two sorted linked lists and return it as a new sorted list.",
    link: "https://leetcode.com/problems/merge-two-sorted-lists/",
    guideLink: "",
    difficultyLevel: "Easy",
  },
  {
    id: "linked-list-16",
    name: "Reorder List",
    description: "Reorder a linked list in a specific manner.",
    link: "https://leetcode.com/problems/reorder-list/",
    guideLink: "",
    difficultyLevel: "Medium",
  },
  {
    id: "linked-list-17",
    name: "Remove Nth Node From End of List",
    description: "Remove the nth node from the end of a linked list.",
    link: "https://leetcode.com/problems/remove-nth-node-from-end-of-list/",
    guideLink: "",
    difficultyLevel: "Medium",
  },
  {
    id: "linked-list-18",
    name: "Detect Cycle in Linked List",
    description: "Detect if a cycle exists in a linked list.",
    link: "https://leetcode.com/problems/linked-list-cycle/",
    guideLink: "",
    difficultyLevel: "Easy",
  },
  {
    id: "linked-list-19",
    name: "Odd Even Linked List",
    description: "Group all odd nodes together followed by the even nodes.",
    link: "https://leetcode.com/problems/odd-even-linked-list/",
    guideLink: "",
    difficultyLevel: "Medium",
  },
  {
    id: "linked-list-20",
    name: "LRU Cache",
    description:
      "Design and implement a data structure for Least Recently Used (LRU) cache.",
    link: "https://leetcode.com/problems/lru-cache/",
    guideLink: "",
    difficultyLevel: "Hard",
  },
  {
    id: "linked-list-21",
    name: "Reverse Nodes in k-Group",
    description: "Reverse nodes in k-group.",
    link: "https://leetcode.com/problems/reverse-nodes-in-k-group/",
    guideLink: "",
    difficultyLevel: "Hard",
  },
  {
    id: "linked-list-22",
    name: "Flatten a Multilevel Doubly Linked List",
    description: "Flatten a multilevel doubly linked list.",
    link: "https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list/",
    guideLink: "",
    difficultyLevel: "Medium",
  },
];
